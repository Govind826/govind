service


package com.govind.employee.service;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.govind.employee.bean.Employee;
import com.govind.employee.dao.EmployeeDao;


@Service
public class EmployeeService {
	
	@Autowired
	EmployeeDao employeeDao;
    
	public Iterable<Employee> getEmployees(){
		
		return employeeDao.findAll();
	    }
	
	public String saveEmployee(Employee emp) {
		employeeDao.save(emp);
		return "Data Saved Successfully";
	}
	
	public String saveEmployeeList(Iterable<Employee> emp) {
		employeeDao.saveAll(emp);
		return "Data Saved Successfully";
	}
	public Employee getEmployee(int id) {
	
		List<Employee> emp = (List<Employee>) employeeDao.findAll();
		
		return emp.stream().filter(t -> t.getId() == id).findFirst().get(); 
	 }
	 
	public List<Employee> getEmployee(String name){
	
		List<Employee> emp = (List<Employee>) employeeDao.findAll();
		List<Employee> FilteredList = emp.stream().filter(e->e.getName().contains(name)).collect(Collectors.toList());
		return FilteredList ; 
	}
	
}




controller

package com.govind.employee.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Arrays;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.govind.employee.bean.Employee;
import com.govind.employee.service.EmployeeService;



@RestController
public class EmployeeController {

	@Autowired
	EmployeeService employeeService;

	@GetMapping("/employees")
	public Iterable<Employee> getEmployees() {
		
		return employeeService.getEmployees();   
	}
    @PostMapping("/employees/save")
    public String saveEmployee() {
    	return employeeService.saveEmployee(new Employee(1, "Rohan", 26));
    }
    @PostMapping("/employees/saveList")
    public String saveEmployeeList() {
    	Iterable<Employee> emp = Arrays.asList( 
	         	new Employee(1, "Amitabh", 20), 
	         	new Employee(2, "Ayush", 30),
	        	new Employee(3, "Amitoh", 40),
	        	new Employee(4, "AKhil", 40),
	        	new Employee(5, "Amitnath", 40));
    	return employeeService.saveEmployeeList(emp);
    }

    @GetMapping("/employees/{id}")
    public Employee getEmployee(@PathVariable("id") int id) {
 
    	return employeeService.getEmployee(id); 
    	}

    @GetMapping("/employees/name/{name}") 
    public List<Employee> getEmployee(@PathVariable("name") String name) {
    	
    	return employeeService.getEmployee(name); 
    	
    	}


	
}



EmployeeDao

package com.govind.employee.dao;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.data.repository.CrudRepository;
import org.springframework.stereotype.Repository;

import com.govind.employee.bean.Employee;



@Repository
public interface EmployeeDao extends CrudRepository<Employee, Integer> {
	
    /*public static List<Employee> employees 
	= new ArrayList<Employee>
           ( Arrays.asList( 
		         	new Employee(1, "Amitabh", 20), 
		         	new Employee(2, "Ayush", 30),
		        	new Employee(3, "Amitoh", 40),
		        	new Employee(4, "AKhil", 40),
		        	new Employee(5, "Amitnath", 40)) );*/

	//public List<Employee> findAll();
}
	

Employee.java


package com.govind.employee.bean;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity
public class Employee {
	
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	 int id;
	 String name;
	 int age;
	
	
	public Employee() {
	
	}

	public Employee(int id, String name, int age) {
		super();
		this.id = id;
		this.name = name;
		this.age = age;
		
	}
	
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	

	@Override
	public String toString() {
		return "EmployeeVO [id=" + id + ", name=" + name + ", age=" + age + "]";
	}

	

	
	
	
}

application properties

server.port: 8080
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.platform=h2
spring.datasource.url=jdbc:h2:mem:test
spring.datasource.driver-class-name=org.h2.Driver


build.gradle

runtimeOnly 'com.h2database:h2' 








